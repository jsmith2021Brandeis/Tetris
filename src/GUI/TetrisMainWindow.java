package GUI;


import Navigation.Direction;
import java.awt.event.ActionEvent;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.KeyStroke;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *https://stackoverflow.com/questions/28444279/how-can-i-evenly-space-out-2d-array-in-jtextarea-without-t
 * Name: Jacob Smith
 * Date: 12.26.2018
 * Assignment: Personal Study, Provides a GUI for Tetris Game
 * Bugs: None
 * Sources:
 * https://stackoverflow.com/questions/28444279/how-can-i-evenly-space-out-2d-array-in-jtextarea-without-t for monospacing
 */
public class TetrisMainWindow extends javax.swing.JFrame {
	//ID to avoid error
    private static final long serialVersionUID = 1L;

	/**
     * Creates new form TetrisMainWindow
     *  and sets the e=text area to not be editable
     */
    public TetrisMainWindow() {
        initComponents();
        BoardPanel.setEditable(false);
       //use the directions enum to set key bindings for all directions the user will need 
        Direction[]directions=Direction.values();
        //iterate through all the directions
       for(int i=0;i<directions.length;i++){
           //uses the key stored in that direction to set the key binding
           Direction d=directions[i];
           String key=d.getKey();
           setKeyBinding(key); 
       }
       //set waiting command indicator to false
       waitingCommand=false;
        
    }
    
    /**
     * Rigs the window to tell when the user presses a key
     * @param key the key to act on 
     */
    private void setKeyBinding(String key){
        BoardPanel.getInputMap().put(KeyStroke.getKeyStroke(key),"pressed");
        BoardPanel.getActionMap().put("pressed", pressedAction); 
    }
    
    /**
     *  UPdates the game window with parameter string
     * @param toOutput the String to put on the game
     */
    public void setOutput(String toOutput){
         BoardPanel.setText(toOutput);
         this.setVisible(true);
    }
    
    /**
     * Defines the action for when a key is pressed
     * which is to return the direction associated with that key press
     */
    Action pressedAction=new AbstractAction(){
        private static final long serialVersionUID = 1L;

		public void actionPerformed(ActionEvent e){
            waitingCommand=true;
            String keyPressed=e.getActionCommand();
            toMove=Direction.getDirection(keyPressed);
   
        }
    };
    /**
     * indicates if the Window has recieved a keyStroke
     */
    private boolean waitingCommand;
    /**
     * the direction the keyStroke is in
     */
    private Direction toMove;
    
    /**
     * Returns whether a keystroke has been recieved
     */
    public boolean recievedCommand(){
        return waitingCommand;
    }
    
    /**
     * Tells the window to reset the command indicators
     * @return the Direction the window recieved
     */
    public Direction processCommand(){
        waitingCommand=false;
        Direction toReturn=toMove;
        toMove=null;
        return toReturn;
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        Header = new javax.swing.JLabel();
        BoardPanelWrapper = new javax.swing.JScrollPane();
        BoardPanel = new javax.swing.JTextArea();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Tetris Game");

        Header.setFont(new java.awt.Font("Castellar", 0, 18)); // NOI18N
        Header.setForeground(new java.awt.Color(51, 51, 255));
        Header.setText("Tetris by Jacob Smith");

        BoardPanel.setColumns(20);
        BoardPanel.setFont(new java.awt.Font("Courier New", 0, 24)); // NOI18N
        BoardPanel.setForeground(new java.awt.Color(51, 255, 0));
        BoardPanel.setRows(5);
        BoardPanelWrapper.setViewportView(BoardPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(Header, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(BoardPanelWrapper, javax.swing.GroupLayout.DEFAULT_SIZE, 315, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Header, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BoardPanelWrapper, javax.swing.GroupLayout.DEFAULT_SIZE, 609, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TetrisMainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TetrisMainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TetrisMainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TetrisMainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                TetrisMainWindow window=new TetrisMainWindow();
                window.setVisible(true);
          
                 
            }
            
        });
        
     
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea BoardPanel;
    private javax.swing.JScrollPane BoardPanelWrapper;
    private javax.swing.JLabel Header;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
